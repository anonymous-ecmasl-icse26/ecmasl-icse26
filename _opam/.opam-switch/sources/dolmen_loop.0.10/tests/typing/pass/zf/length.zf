
# example with most features, including polymorphism

val i : type.
val foo : i.

data nat :=
  | Z
  | S nat
and list a :=
  | Nil
  | Cons a (list a).  # note: polymorphisme explicite, pas de @

def three : nat := S (S (S Z)).

val length : pi a. list a -> nat.

assert forall (a : type). length _ (Nil a) = Z.
assert forall (a: type) (x : a) (l : list a). length _ (Cons _ x l) = S (length _ l).

goal exists (a : type) (l : list a). length _ l = three.
