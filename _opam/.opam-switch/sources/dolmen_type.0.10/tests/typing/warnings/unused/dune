; File auto-generated by gentests.ml

; Auto-generated part begin
; Test for term_variable.p
; Incremental test

(rule
   (target  term_variable.incremental)
   (deps    (:input term_variable.p))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff term_variable.expected term_variable.incremental)))

; Full mode test

(rule
   (target  term_variable.full)
   (deps    (:input term_variable.p))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff term_variable.expected term_variable.full)))


; Test for type_variable.p
; Incremental test

(rule
   (target  type_variable.incremental)
   (deps    (:input type_variable.p))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=incremental --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff type_variable.expected type_variable.incremental)))

; Full mode test

(rule
   (target  type_variable.full)
   (deps    (:input type_variable.p))
   (package dolmen_bin)
   (action (chdir %{workspace_root}
            (with-outputs-to %{target}
             (with-accepted-exit-codes (or 0 (not 0))
              (run dolmen --mode=full --color=never %{input} %{read-lines:flags.dune}))))))
(rule
  (alias runtest)
  (package dolmen_bin)
  (action (diff type_variable.expected type_variable.full)))


; Auto-generated part end
