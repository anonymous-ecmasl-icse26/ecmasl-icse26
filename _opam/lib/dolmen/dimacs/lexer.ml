# 4 "src/languages/dimacs/lexer.mll"
 
  exception Error

  module T = Dolmen_std.Tok

  open Tokens

  let descr token : T.descr =
    match (token : token) with
    | EOF -> T.descr ~kind:"end of file token" ""
    | P -> T.descr ~kind:"keyword" "p"
    | CNF -> T.descr ~kind:"keyword" "cnf"
    | NEWLINE -> T.descr ~kind:"newline character" ""
    | ZERO -> T.descr ~kind:"integer" "0"
    | INT i -> T.descr ~kind:"integer" (string_of_int i)


# 20 "src/languages/dimacs/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\247\255\248\255\009\000\019\000\250\255\251\255\252\255\
    \254\255\000\000\000\000\253\255\029\000\001\000\253\255\254\255\
    \255\255";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\008\000\006\000\255\255\255\255\255\255\
    \255\255\000\000\255\255\255\255\006\000\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\255\255\255\255\000\000\000\000\000\000\
    \000\000\255\255\255\255\000\000\255\255\014\000\000\000\000\000\
    \000\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\005\000\002\000\015\000\000\000\005\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \005\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\003\000\000\000\000\000\
    \006\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\009\000\000\000\000\000\011\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\010\000\000\000\
    \008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \007\000\016\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\013\000\255\255\000\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\012\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\000\000\255\255\255\255\010\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\009\000\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\013\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec token newline lexbuf =
   __ocaml_lex_token_rec newline lexbuf 0
and __ocaml_lex_token_rec newline lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 33 "src/languages/dimacs/lexer.mll"
                    ( comment newline lexbuf )
# 129 "src/languages/dimacs/lexer.ml"

  | 1 ->
# 34 "src/languages/dimacs/lexer.mll"
                    ( P )
# 134 "src/languages/dimacs/lexer.ml"

  | 2 ->
# 35 "src/languages/dimacs/lexer.mll"
                    ( CNF )
# 139 "src/languages/dimacs/lexer.ml"

  | 3 ->
# 36 "src/languages/dimacs/lexer.mll"
                    ( EOF )
# 144 "src/languages/dimacs/lexer.ml"

  | 4 ->
# 37 "src/languages/dimacs/lexer.mll"
                    ( ZERO )
# 149 "src/languages/dimacs/lexer.ml"

  | 5 ->
# 38 "src/languages/dimacs/lexer.mll"
                    ( token newline lexbuf )
# 154 "src/languages/dimacs/lexer.ml"

  | 6 ->
# 39 "src/languages/dimacs/lexer.mll"
                    ( INT (int_of_string @@ Lexing.lexeme lexbuf) )
# 159 "src/languages/dimacs/lexer.ml"

  | 7 ->
# 40 "src/languages/dimacs/lexer.mll"
                    ( newline lexbuf; NEWLINE )
# 164 "src/languages/dimacs/lexer.ml"

  | 8 ->
# 41 "src/languages/dimacs/lexer.mll"
                    ( raise Error )
# 169 "src/languages/dimacs/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_token_rec newline lexbuf __ocaml_lex_state

and comment newline lexbuf =
   __ocaml_lex_comment_rec newline lexbuf 13
and __ocaml_lex_comment_rec newline lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 44 "src/languages/dimacs/lexer.mll"
          ( EOF )
# 181 "src/languages/dimacs/lexer.ml"

  | 1 ->
# 45 "src/languages/dimacs/lexer.mll"
          ( newline lexbuf; token newline lexbuf )
# 186 "src/languages/dimacs/lexer.ml"

  | 2 ->
# 46 "src/languages/dimacs/lexer.mll"
                            ( comment newline lexbuf )
# 191 "src/languages/dimacs/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_comment_rec newline lexbuf __ocaml_lex_state

;;

