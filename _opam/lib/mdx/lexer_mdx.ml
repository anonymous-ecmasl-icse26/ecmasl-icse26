# 1 "lib/lexer_mdx.mll"
 
open Astring

type token = [ `Block of Block.Raw.t | `Section of int * string | `Text of string ]

let newline lexbuf = Lexing.new_line lexbuf

let loc ~start ~end_ =
  Location.{loc_start = start; loc_end = end_; loc_ghost = false}

# 13 "lib/lexer_mdx.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\251\255\001\000\002\000\003\000\005\000\255\255\004\000\
    \254\255\006\000\007\000\009\000\010\000\011\000\012\000\014\000\
    \016\000\017\000\021\000\018\000\023\000\001\000\033\000\024\000\
    \044\000\054\000\253\255\061\000\062\000\063\000\072\000\005\000\
    \081\000\073\000\078\000\015\000\019\000\029\000\047\000\102\000\
    \028\000\082\000\112\000\006\000\007\000\106\000\118\000\034\000\
    \037\000\120\000\074\000\122\000\057\000\065\000\125\000\253\255\
    \132\000\048\000\138\000\253\255\067\000\075\000\142\000\255\255\
    \127\000\146\000\254\255\043\000\047\000\049\000\037\000\049\000\
    \038\000\114\000\059\000\048\000\049\000\055\000\053\000\163\000\
    \255\255\165\000\251\255\166\000\169\000\170\000\171\000\255\255\
    \172\000\254\255\173\000\253\255\174\000\175\000\176\000\177\000\
    \181\000\179\000\178\000\180\000\182\000\186\000\183\000\198\000\
    \189\000\191\000\194\000\199\000\195\000\200\000\184\000\203\000\
    \252\255\201\000\205\000\184\000\254\255\255\255\207\000\253\255\
    ";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\003\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\002\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_default =
   "\002\000\000\000\002\000\002\000\002\000\002\000\000\000\007\000\
    \000\000\002\000\002\000\002\000\002\000\002\000\002\000\016\000\
    \016\000\016\000\002\000\016\000\016\000\255\255\002\000\016\000\
    \016\000\025\000\000\000\035\000\025\000\025\000\025\000\255\255\
    \035\000\025\000\025\000\035\000\035\000\035\000\035\000\035\000\
    \035\000\041\000\035\000\255\255\255\255\045\000\047\000\047\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\054\000\000\000\
    \057\000\057\000\060\000\000\000\060\000\060\000\060\000\000\000\
    \060\000\060\000\000\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\083\000\000\000\083\000\083\000\083\000\083\000\000\000\
    \088\000\000\000\090\000\000\000\083\000\083\000\083\000\083\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\083\000\
    \083\000\083\000\083\000\083\000\083\000\083\000\083\000\113\000\
    \000\000\113\000\255\255\255\255\000\000\000\000\118\000\000\000\
    ";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\001\000\001\000\001\000\001\000\008\000\001\000\
    \001\000\001\000\011\000\001\000\001\000\001\000\001\000\015\000\
    \001\000\026\000\001\000\001\000\001\000\026\000\018\000\001\000\
    \020\000\021\000\001\000\005\000\009\000\007\000\026\000\026\000\
    \005\000\011\000\022\000\021\000\026\000\012\000\015\000\001\000\
    \018\000\018\000\018\000\010\000\011\000\018\000\001\000\022\000\
    \018\000\026\000\055\000\017\000\004\000\017\000\019\000\019\000\
    \026\000\022\000\049\000\001\000\017\000\017\000\027\000\026\000\
    \026\000\026\000\038\000\001\000\018\000\059\000\049\000\014\000\
    \020\000\030\000\031\000\026\000\001\000\059\000\027\000\013\000\
    \026\000\017\000\032\000\031\000\026\000\027\000\027\000\027\000\
    \003\000\043\000\053\000\028\000\015\000\043\000\044\000\045\000\
    \032\000\027\000\037\000\029\000\029\000\039\000\027\000\039\000\
    \031\000\032\000\042\000\040\000\026\000\028\000\028\000\023\000\
    \024\000\042\000\026\000\028\000\041\000\030\000\037\000\046\000\
    \026\000\048\000\001\000\051\000\021\000\052\000\039\000\055\000\
    \051\000\059\000\046\000\068\000\025\000\056\000\055\000\069\000\
    \042\000\070\000\071\000\062\000\059\000\072\000\046\000\062\000\
    \059\000\041\000\051\000\065\000\066\000\056\000\073\000\074\000\
    \075\000\054\000\076\000\077\000\056\000\050\000\078\000\079\000\
    \033\000\034\000\062\000\064\000\079\000\080\000\062\000\082\000\
    \082\000\036\000\065\000\082\000\082\000\082\000\089\000\091\000\
    \082\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
    \082\000\082\000\082\000\079\000\082\000\085\000\036\000\082\000\
    \086\000\082\000\090\000\088\000\082\000\082\000\086\000\094\000\
    \082\000\082\000\082\000\112\000\111\000\112\000\092\000\116\000\
    \118\000\119\000\048\000\093\000\000\000\000\000\000\000\065\000\
    \098\000\084\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\061\000\111\000\000\000\115\000\061\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \006\000\001\000\001\000\001\000\008\000\001\000\001\000\001\000\
    \000\000\001\000\001\000\001\000\001\000\000\000\001\000\026\000\
    \001\000\001\000\001\000\026\000\000\000\001\000\099\000\021\000\
    \001\000\100\000\000\000\111\000\026\000\026\000\095\000\102\000\
    \096\000\021\000\026\000\097\000\000\000\001\000\105\000\000\000\
    \000\000\103\000\101\000\107\000\001\000\106\000\000\000\026\000\
    \055\000\110\000\000\000\104\000\000\000\000\000\026\000\109\000\
    \000\000\001\000\108\000\000\000\000\000\026\000\026\000\026\000\
    \000\000\001\000\000\000\059\000\000\000\000\000\000\000\000\000\
    \031\000\026\000\001\000\059\000\000\000\000\000\026\000\000\000\
    \000\000\031\000\026\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\031\000\000\000\
    \000\000\000\000\026\000\000\000\000\000\000\000\000\000\000\000\
    \026\000\000\000\000\000\000\000\000\000\000\000\026\000\000\000\
    \001\000\000\000\021\000\000\000\000\000\055\000\000\000\059\000\
    \000\000\000\000\000\000\000\000\055\000\000\000\000\000\000\000\
    \000\000\000\000\063\000\000\000\000\000\000\000\059\000\000\000\
    \000\000\000\000\066\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\080\000\000\000\087\000\082\000\000\000\
    \000\000\082\000\082\000\082\000\089\000\091\000\082\000\082\000\
    \082\000\082\000\082\000\082\000\082\000\082\000\082\000\082\000\
    \082\000\000\000\082\000\000\000\000\000\082\000\000\000\082\000\
    \000\000\000\000\082\000\082\000\000\000\000\000\082\000\082\000\
    \082\000\112\000\000\000\112\000\000\000\117\000\000\000\119\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\002\000\003\000\004\000\007\000\005\000\
    \009\000\010\000\011\000\011\000\012\000\013\000\014\000\015\000\
    \015\000\035\000\016\000\017\000\019\000\036\000\018\000\018\000\
    \020\000\020\000\023\000\000\000\004\000\005\000\040\000\037\000\
    \005\000\011\000\022\000\022\000\047\000\011\000\015\000\048\000\
    \016\000\017\000\019\000\009\000\010\000\018\000\024\000\020\000\
    \023\000\038\000\057\000\015\000\000\000\016\000\017\000\019\000\
    \025\000\022\000\018\000\052\000\020\000\023\000\027\000\027\000\
    \028\000\029\000\037\000\053\000\024\000\060\000\022\000\013\000\
    \019\000\030\000\030\000\033\000\050\000\061\000\025\000\012\000\
    \034\000\024\000\032\000\032\000\041\000\027\000\028\000\029\000\
    \000\000\021\000\003\000\025\000\014\000\031\000\043\000\044\000\
    \030\000\033\000\027\000\028\000\029\000\038\000\034\000\039\000\
    \039\000\032\000\041\000\036\000\045\000\030\000\033\000\020\000\
    \023\000\042\000\042\000\034\000\040\000\029\000\032\000\046\000\
    \046\000\022\000\049\000\051\000\051\000\048\000\039\000\054\000\
    \050\000\064\000\045\000\067\000\024\000\056\000\056\000\068\000\
    \042\000\069\000\070\000\058\000\058\000\071\000\046\000\062\000\
    \062\000\052\000\051\000\065\000\065\000\054\000\072\000\073\000\
    \074\000\053\000\075\000\076\000\056\000\049\000\077\000\078\000\
    \030\000\033\000\058\000\061\000\079\000\079\000\062\000\081\000\
    \083\000\032\000\065\000\084\000\085\000\086\000\088\000\090\000\
    \092\000\093\000\094\000\095\000\098\000\097\000\099\000\096\000\
    \100\000\102\000\110\000\079\000\101\000\081\000\039\000\104\000\
    \081\000\105\000\085\000\086\000\106\000\108\000\086\000\093\000\
    \103\000\107\000\109\000\113\000\111\000\111\000\084\000\114\000\
    \115\000\118\000\051\000\092\000\255\255\255\255\255\255\064\000\
    \097\000\081\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\058\000\111\000\255\255\114\000\062\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\002\000\003\000\004\000\007\000\005\000\009\000\010\000\
    \255\255\011\000\012\000\013\000\014\000\255\255\015\000\035\000\
    \016\000\017\000\019\000\036\000\255\255\018\000\098\000\020\000\
    \023\000\099\000\255\255\110\000\040\000\037\000\094\000\101\000\
    \095\000\022\000\047\000\096\000\255\255\048\000\104\000\255\255\
    \255\255\102\000\100\000\106\000\024\000\105\000\255\255\038\000\
    \057\000\109\000\255\255\103\000\255\255\255\255\025\000\108\000\
    \255\255\052\000\107\000\255\255\255\255\027\000\028\000\029\000\
    \255\255\053\000\255\255\060\000\255\255\255\255\255\255\255\255\
    \030\000\033\000\050\000\061\000\255\255\255\255\034\000\255\255\
    \255\255\032\000\041\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\039\000\255\255\
    \255\255\255\255\045\000\255\255\255\255\255\255\255\255\255\255\
    \042\000\255\255\255\255\255\255\255\255\255\255\046\000\255\255\
    \049\000\255\255\051\000\255\255\255\255\054\000\255\255\064\000\
    \255\255\255\255\255\255\255\255\056\000\255\255\255\255\255\255\
    \255\255\255\255\058\000\255\255\255\255\255\255\062\000\255\255\
    \255\255\255\255\065\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\079\000\255\255\081\000\083\000\255\255\
    \255\255\084\000\085\000\086\000\088\000\090\000\092\000\093\000\
    \094\000\095\000\098\000\097\000\099\000\096\000\100\000\102\000\
    \110\000\255\255\101\000\255\255\255\255\104\000\255\255\105\000\
    \255\255\255\255\106\000\108\000\255\255\255\255\103\000\107\000\
    \109\000\113\000\255\255\111\000\255\255\114\000\255\255\118\000\
    ";
  Lexing.lex_base_code =
   "\000\000\009\000\001\000\002\000\003\000\004\000\000\000\005\000\
    \027\000\006\000\007\000\008\000\009\000\010\000\011\000\013\000\
    \014\000\015\000\016\000\017\000\019\000\000\000\020\000\021\000\
    \022\000\023\000\206\000\031\000\024\000\033\000\061\000\000\000\
    \065\000\040\000\071\000\027\000\028\000\032\000\038\000\034\000\
    \042\000\051\000\077\000\000\000\002\000\070\000\079\000\047\000\
    \063\000\072\000\074\000\080\000\081\000\082\000\091\000\221\001\
    \095\000\084\000\103\000\240\001\097\000\098\000\110\000\000\000\
    \100\000\104\000\243\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\111\000\240\001\112\000\115\000\116\000\118\000\000\000\
    \119\000\015\002\121\000\025\002\122\000\123\000\124\000\127\000\
    \129\000\130\000\131\000\133\000\134\000\135\000\137\000\139\000\
    \141\000\142\000\144\000\145\000\146\000\148\000\149\000\151\000\
    \047\002\152\000\000\000\131\000\000\000\000\000\154\000\243\001\
    ";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\136\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\206\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_default_code =
   "\001\000\000\000\001\000\001\000\001\000\001\000\000\000\022\000\
    \000\000\001\000\001\000\001\000\001\000\001\000\001\000\043\000\
    \068\000\068\000\001\000\068\000\068\000\000\000\001\000\068\000\
    \068\000\173\000\000\000\219\000\173\000\173\000\173\000\000\000\
    \083\001\173\000\173\000\219\000\219\000\219\000\219\000\219\000\
    \219\000\150\001\162\001\000\000\000\000\178\001\190\001\190\001\
    \001\000\001\000\001\000\001\000\001\000\001\000\150\001\000\000\
    \083\001\219\000\232\001\000\000\232\001\232\001\232\001\000\000\
    \232\001\232\001\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\232\001\000\000\232\001\232\001\232\001\232\001\000\000\
    \010\002\000\000\020\002\000\000\232\001\232\001\232\001\232\001\
    \232\001\232\001\232\001\232\001\232\001\232\001\232\001\232\001\
    \232\001\232\001\232\001\232\001\232\001\232\001\232\001\035\002\
    \000\000\052\002\000\000\000\000\000\000\000\000\057\002\000\000\
    ";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\050\000\000\000\
    \000\000\000\000\000\000\000\000\082\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\004\000\012\000\000\000\000\000\017\000\
    \224\000\000\000\000\000\000\000\129\001\050\000\075\000\001\000\
    \000\000\096\000\000\000\001\000\000\000\144\000\144\000\186\000\
    \240\000\159\001\061\000\082\000\089\000\159\001\103\000\224\000\
    \118\000\008\001\149\000\149\000\193\000\251\000\040\001\000\000\
    \088\001\000\000\224\000\000\000\231\000\083\001\019\001\061\000\
    \159\001\000\000\000\000\186\000\000\000\097\001\224\000\159\001\
    \193\001\159\001\198\001\000\000\000\000\186\000\000\000\193\000\
    \141\000\224\000\169\001\032\000\083\001\000\000\185\001\088\001\
    \224\000\000\000\053\001\000\000\000\000\224\000\000\000\193\001\
    \235\001\000\000\000\000\129\000\097\001\129\000\158\000\235\001\
    \000\000\000\000\000\000\186\000\083\001\000\000\000\000\224\000\
    \000\000\000\000\132\001\000\000\000\000\000\000\000\000\235\001\
    \070\001\000\000\139\001\000\000\000\000\000\000\235\001\000\000\
    \000\000\000\000\246\001\000\000\251\001\000\000\000\002\000\000\
    \000\000\005\002\000\000\000\000\000\000\070\001\000\000\000\000\
    \040\002\000\000\000\000\057\002\000\000\000\000\000\000\112\001\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \203\001\208\001\139\001\000\000\000\000\000\000\000\000\040\002\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \028\002\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\129\001\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\159\001\
    \000\000\000\000\000\000\159\001\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\159\001\000\000\
    \000\000\000\000\000\000\000\000\000\000\159\001\000\000\159\001\
    \198\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\000\000\002\000\003\000\004\000\005\000\007\000\
    \009\000\010\000\011\000\012\000\013\000\014\000\015\000\015\000\
    \016\000\017\000\018\000\019\000\020\000\020\000\022\000\023\000\
    \024\000\025\000\028\000\000\000\005\000\035\000\036\000\005\000\
    \027\000\027\000\037\000\029\000\039\000\015\000\016\000\017\000\
    \038\000\019\000\033\000\020\000\040\000\023\000\024\000\025\000\
    \028\000\047\000\015\000\016\000\017\000\041\000\019\000\027\000\
    \020\000\029\000\023\000\024\000\025\000\028\000\030\000\030\000\
    \033\000\048\000\032\000\032\000\027\000\037\000\029\000\019\000\
    \045\000\034\000\049\000\041\000\050\000\033\000\042\000\042\000\
    \046\000\046\000\051\000\052\000\053\000\030\000\057\000\029\000\
    \021\000\032\000\044\000\014\000\038\000\054\000\045\000\034\000\
    \056\000\056\000\030\000\060\000\061\000\042\000\064\000\046\000\
    \058\000\058\000\065\000\020\000\034\000\023\000\024\000\062\000\
    \062\000\081\000\083\000\054\000\036\000\084\000\085\000\056\000\
    \086\000\088\000\039\000\090\000\092\000\093\000\094\000\058\000\
    \033\000\095\000\040\000\096\000\097\000\098\000\062\000\099\000\
    \100\000\101\000\081\000\102\000\085\000\103\000\086\000\104\000\
    \105\000\086\000\106\000\107\000\108\000\030\000\109\000\110\000\
    \111\000\111\000\113\000\115\000\118\000\255\255\255\255\034\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \051\000\052\000\053\000\255\255\255\255\255\255\255\255\111\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \110\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\002\000\003\000\004\000\005\000\007\000\009\000\010\000\
    \011\000\012\000\013\000\014\000\255\255\015\000\016\000\017\000\
    \018\000\019\000\255\255\020\000\022\000\023\000\024\000\025\000\
    \028\000\255\255\255\255\035\000\036\000\255\255\255\255\027\000\
    \037\000\029\000\039\000\255\255\255\255\255\255\038\000\255\255\
    \033\000\255\255\040\000\255\255\255\255\255\255\255\255\047\000\
    \255\255\255\255\255\255\041\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\030\000\255\255\048\000\
    \255\255\032\000\255\255\255\255\255\255\255\255\045\000\034\000\
    \049\000\255\255\050\000\255\255\255\255\042\000\255\255\046\000\
    \051\000\052\000\053\000\255\255\057\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\054\000\255\255\255\255\255\255\056\000\
    \255\255\060\000\061\000\255\255\064\000\255\255\255\255\058\000\
    \065\000\255\255\255\255\255\255\255\255\255\255\062\000\081\000\
    \083\000\255\255\255\255\084\000\085\000\255\255\086\000\088\000\
    \255\255\090\000\092\000\093\000\094\000\255\255\255\255\095\000\
    \255\255\096\000\097\000\098\000\255\255\099\000\100\000\101\000\
    \255\255\102\000\255\255\103\000\255\255\104\000\105\000\255\255\
    \106\000\107\000\108\000\255\255\109\000\110\000\255\255\111\000\
    \113\000\255\255\118\000";
  Lexing.lex_code =
   "\255\006\255\255\007\255\006\255\255\000\006\255\008\255\006\255\
    \255\006\255\007\255\255\006\255\008\255\255\001\008\000\007\255\
    \012\255\011\255\010\255\009\255\006\255\255\012\255\010\255\006\
    \255\255\006\255\011\255\012\255\009\255\010\255\255\014\255\013\
    \255\006\255\255\006\255\012\255\010\255\255\006\255\014\012\013\
    \010\255\006\255\014\255\013\255\255\016\255\015\255\006\255\255\
    \006\255\014\016\013\015\255\012\014\010\013\014\016\013\015\006\
    \255\016\255\015\255\255\012\014\010\013\006\255\014\255\013\255\
    \255\013\255\012\255\006\255\255\000\011\001\012\255\013\010\255\
    \006\255\014\012\255\010\013\006\255\014\255\013\255\255\020\255\
    \019\255\018\255\017\255\013\255\012\255\006\255\255\006\255\019\
    \255\020\255\012\255\013\255\018\255\255\020\255\019\255\006\255\
    \255\020\255\019\255\018\255\015\255\014\255\006\255\255\002\019\
    \003\020\005\009\004\010\000\017\001\018\255\006\255\020\255\255\
    \006\255\019\255\020\255\255\006\255\020\255\014\012\015\013\255\
    \006\255\019\255\020\255\012\014\013\015\255\021\255\020\255\019\
    \255\018\255\016\255\006\255\255\006\255\019\255\020\255\012\016\
    \013\021\255\012\014\013\015\014\016\015\021\006\255\019\255\020\
    \255\016\255\021\255\018\255\255\006\255\019\255\020\255\014\255\
    \015\255\018\255\255\012\014\013\015\006\255\019\255\020\255\014\
    \255\015\255\018\255\255\020\255\019\255\018\255\015\255\012\255\
    \006\255\255\020\255\006\255\255\006\255\019\255\020\255\013\015\
    \255\013\015\006\255\019\255\020\255\014\255\015\255\018\255\255\
    \010\013\006\255\019\255\020\255\012\255\013\255\017\255\018\255\
    \255\013\015\255\006\255\020\255\013\015\255\020\255\019\255\018\
    \255\017\255\006\255\255\006\255\019\255\020\255\018\255\255\010\
    \013\255\006\255\020\255\010\013\255\020\255\019\255\018\255\017\
    \255\255\019\255\020\255\018\255\255\020\255\019\255\255\020\255\
    \255\019\255\020\255\255\012\014\010\013\255\006\255\010\013\255\
    \006\255\019\255\020\255\013\010\017\255\018\255\255\005\255\002\
    \019\003\020\000\017\001\018\255\002\255\255\002\255\001\255\255\
    \000\002\255\000\001\255\003\255\002\255\255\005\255\002\255\255\
    \004\255\002\255\255\002\255\003\255\255\002\255\004\255\255\001\
    \004\000\003\255\002\255\005\255\255\000\005\255\007\255\006\255\
    \002\255\255\007\255\002\255\255\002\255\006\255\007\255\255\000\
    \006\001\007\255\002\255\007\255\255\001\255\255";
}

let rec text section lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 22 (-1);(* L=1 [6] <- p ;  *)
  lexbuf.Lexing.lex_mem.(6) <- lexbuf.Lexing.lex_curr_pos ;
 __ocaml_lex_text_rec section lexbuf 0
and __ocaml_lex_text_rec section lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 16 "lib/lexer_mdx.mll"
        ( [] )
# 391 "lib/lexer_mdx.ml"

  | 1 ->
let
# 17 "lib/lexer_mdx.mll"
             n
# 397 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0)
and
# 17 "lib/lexer_mdx.mll"
                                 str
# 402 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) lexbuf.Lexing.lex_mem.(1) in
# 18 "lib/lexer_mdx.mll"
      ( let section = (String.length n, str) in
        newline lexbuf;
        `Section section :: text (Some section) lexbuf )
# 408 "lib/lexer_mdx.ml"

  | 2 ->
let
# 21 "lib/lexer_mdx.mll"
                                             label_cmt
# 414 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(5) lexbuf.Lexing.lex_mem.(4)
and
# 22 "lib/lexer_mdx.mll"
                             header
# 419 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 22 "lib/lexer_mdx.mll"
                                                      legacy_labels
# 424 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(2) lexbuf.Lexing.lex_mem.(3) in
# 23 "lib/lexer_mdx.mll"
      ( let start = Lexing.lexeme_start_p lexbuf in
        newline lexbuf;
        (match label_cmt with
         | Some _ -> newline lexbuf
         | None -> ());
        let contents = block lexbuf in
        (* we assume the multi-line block starts with an ""
           TODO: tie this to the regex match *)
        let contents = "" :: contents in
        let errors =
          match error_block lexbuf with
          | exception _ -> []
          | e ->
            List.map (fun x ->
                match String.trim x with
                | "..." -> `Ellipsis
                | _ -> `Output x) e
        in
        let end_ = Lexing.lexeme_start_p lexbuf in
        let loc = loc ~start ~end_ in
        let block =
          Block.Raw.make ~loc ~section ~header ~contents ~label_cmt
            ~legacy_labels ~errors
        in
        `Block block :: text section lexbuf )
# 452 "lib/lexer_mdx.ml"

  | 3 ->
let
# 48 "lib/lexer_mdx.mll"
                                           labels
# 458 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1) in
# 49 "lib/lexer_mdx.mll"
      ( let loc = Location.curr lexbuf in
        newline lexbuf;
        let block = Block.Raw.make_include ~loc ~section ~labels in
        `Block block :: text section lexbuf )
# 465 "lib/lexer_mdx.ml"

  | 4 ->
let
# 53 "lib/lexer_mdx.mll"
                 str
# 471 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0) in
# 54 "lib/lexer_mdx.mll"
      ( newline lexbuf;
        let str = String.append str "\n" in
        `Text str :: text section lexbuf )
# 477 "lib/lexer_mdx.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_text_rec section lexbuf __ocaml_lex_state

and block lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 3 (-1);(* L=2 [2] <- p ; [1] <- p ;  *)
  lexbuf.Lexing.lex_mem.(2) <- lexbuf.Lexing.lex_curr_pos ;
  lexbuf.Lexing.lex_mem.(1) <- lexbuf.Lexing.lex_curr_pos ;
 __ocaml_lex_block_rec lexbuf 58
and __ocaml_lex_block_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 59 "lib/lexer_mdx.mll"
        ( [""] )
# 492 "lib/lexer_mdx.ml"

  | 1 ->
let
# 60 "lib/lexer_mdx.mll"
           end_pad
# 498 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0) in
# 61 "lib/lexer_mdx.mll"
    ( newline lexbuf;
      [end_pad] )
# 503 "lib/lexer_mdx.ml"

  | 2 ->
let
# 63 "lib/lexer_mdx.mll"
                 str
# 509 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0) in
# 64 "lib/lexer_mdx.mll"
    ( newline lexbuf;
      str :: block lexbuf )
# 514 "lib/lexer_mdx.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_block_rec lexbuf __ocaml_lex_state

and error_block lexbuf =
   __ocaml_lex_error_block_rec lexbuf 67
and __ocaml_lex_error_block_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 68 "lib/lexer_mdx.mll"
                           ( newline lexbuf; block lexbuf )
# 526 "lib/lexer_mdx.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_error_block_rec lexbuf __ocaml_lex_state

and cram_text section lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 8 (-1);(* L=1 [2] <- p ;  *)
  lexbuf.Lexing.lex_mem.(2) <- lexbuf.Lexing.lex_curr_pos ;
 __ocaml_lex_cram_text_rec section lexbuf 81
and __ocaml_lex_cram_text_rec section lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 71 "lib/lexer_mdx.mll"
        ( [] )
# 540 "lib/lexer_mdx.ml"

  | 1 ->
let
# 72 "lib/lexer_mdx.mll"
             n
# 546 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0)
and
# 72 "lib/lexer_mdx.mll"
                                 str
# 551 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_mem.(0) + 1) lexbuf.Lexing.lex_mem.(1) in
# 73 "lib/lexer_mdx.mll"
      ( let section = (String.length n, str) in
        newline lexbuf;
        `Section section :: cram_text (Some section) lexbuf )
# 557 "lib/lexer_mdx.ml"

  | 2 ->
let
# 76 "lib/lexer_mdx.mll"
             ws
# 563 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 2)
and
# 76 "lib/lexer_mdx.mll"
                              first_line
# 568 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_mem.(0) in
# 77 "lib/lexer_mdx.mll"
      ( let start = Lexing.lexeme_start_p lexbuf in
        newline lexbuf;
        let header = "sh" in
        let requires_empty_line, contents = cram_block lexbuf in
        let contents = (String.append ws first_line) :: contents in
        let label_cmt = Some "" in
        let legacy_labels = "" in
        let end_ = Lexing.lexeme_start_p lexbuf in
        let rest = cram_text section lexbuf in
        let loc = loc ~start ~end_ in
        let block =
            Block.Raw.make ~loc ~section ~header ~contents ~label_cmt
              ~legacy_labels ~errors:[]
        in
        `Block block
        :: (if requires_empty_line then `Text "\n" :: rest else rest) )
# 587 "lib/lexer_mdx.ml"

  | 3 ->
let
# 93 "lib/lexer_mdx.mll"
                                             choice
# 593 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1) in
# 94 "lib/lexer_mdx.mll"
      ( let start = Lexing.lexeme_start_p lexbuf in
        newline lexbuf;
        let header = "sh" in
        let requires_empty_line, contents = cram_block lexbuf in
        let label_cmt = Some (Printf.sprintf "non-deterministic=%s" choice) in
        let legacy_labels = "" in
        let end_ = Lexing.lexeme_start_p lexbuf in
        let loc = loc ~start ~end_ in
        let rest = cram_text section lexbuf in
        let block =
            Block.Raw.make ~loc ~section ~header ~contents ~label_cmt
              ~legacy_labels ~errors:[]
        in
        `Block block
        :: (if requires_empty_line then `Text "\n" :: rest else rest) )
# 611 "lib/lexer_mdx.ml"

  | 4 ->
let
# 109 "lib/lexer_mdx.mll"
                 str
# 617 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_mem.(0) in
# 110 "lib/lexer_mdx.mll"
      ( newline lexbuf;
        let str = String.append str "\n" in
        `Text str :: cram_text section lexbuf )
# 623 "lib/lexer_mdx.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_cram_text_rec section lexbuf __ocaml_lex_state

and cram_block lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_cram_block_rec lexbuf 114
and __ocaml_lex_cram_block_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 115 "lib/lexer_mdx.mll"
        ( false, [] )
# 635 "lib/lexer_mdx.ml"

  | 1 ->
# 116 "lib/lexer_mdx.mll"
        ( newline lexbuf; true, [] )
# 640 "lib/lexer_mdx.ml"

  | 2 ->
let
# 117 "lib/lexer_mdx.mll"
             ws
# 646 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_start_pos + 2)
and
# 117 "lib/lexer_mdx.mll"
                               str
# 651 "lib/lexer_mdx.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_mem.(0) in
# 118 "lib/lexer_mdx.mll"
      ( let requires_empty_line, lst = cram_block lexbuf in
        newline lexbuf;
        requires_empty_line, (String.append ws str) :: lst )
# 657 "lib/lexer_mdx.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_cram_block_rec lexbuf __ocaml_lex_state

;;

# 122 "lib/lexer_mdx.mll"
 
  let markdown_token lexbuf =
    try Ok (text None lexbuf)
    with
    | exn ->
      let loc = Location.curr lexbuf in
      let msg =
        Format.asprintf "%a: %s" Stable_printer.Location.pp loc
          (Printexc.to_string exn)
      in
      Util.Result.errorf "%s" msg


let cram_token lexbuf =
    try Ok (cram_text None lexbuf)
    with
    | exn ->
      let loc = Location.curr lexbuf in
      let msg =
        Format.asprintf "%a: %s" Stable_printer.Location.pp loc
          (Printexc.to_string exn)
      in
      Util.Result.errorf "%s" msg

# 689 "lib/lexer_mdx.ml"
